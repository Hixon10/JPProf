/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id "com.github.johnrengelman.shadow" version "7.0.0"

}
def jpprofVersion = project.properties['jpprof_version']


repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation 'tools.profiler:async-profiler:1.8.3'
}

tasks.withType(Test) {
    systemProperty "java.library.path",  "$projectDir/lib/natives/"
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit4 test framework
            useJUnit('4.13.2')
        }
    }
}

shadowJar {
    exclude 'Log4j-*'
    exclude 'META-INF/org/apache/logging/log4j/**'
    exclude 'META-INF/services/**'

    // from("$buildDir/async-profiler/native") {
    //     include "**.so"
    //     include "**.so.sha1"
    // }

    archiveFileName = "jpprof.jar"

    minimize()
    archiveClassifier.set('')

}


publishing {
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
            groupId = 'com.grafana'
            artifactId = 'jpprof'
            version = jpprofVersion
            artifacts = [ shadowJar, javadocJar, sourcesJar ]
            pom {
                name = 'Java PProf'
                description = 'Go Pprof but for Java runtime.'
                url = 'https://grafana.com'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'ctovena'
                        name = 'Grafana Labs'
                        email = 'cyril.tovena@grafana.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/grafana/jpprof.git'
                    developerConnection = 'scm:git:ssh://github.com/grafana/jpprof.git'
                    url = 'https://github.com/grafana/jpprof'
                }
            }
        }
    }
    repositories {
        maven {
            credentials {
                username project.hasProperty('nexusUsername') ? project.nexusUsername : ''
                password project.hasProperty('nexusPassword') ? project.nexusPassword : ''
            }
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
        }
    }
}

signing {
    sign publishing.publications.shadow
}
